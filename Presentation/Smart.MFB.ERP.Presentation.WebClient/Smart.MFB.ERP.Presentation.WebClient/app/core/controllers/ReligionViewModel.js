
var religionModule = angular.module('religion', ['schoolERPCommon'])
    .config(function ($routeProvider, $locationProvider) {
   
        $routeProvider.when(schoolERP.rootPath + 'core/religion', { templateUrl: schoolERP.rootPath + 'app/core/views/religionlist.html', controller: 'ReligionListViewModel' });
		$routeProvider.when(schoolERP.rootPath + 'core/religion/religionedit/:religionId', { templateUrl: schoolERP.rootPath + 'app/core/views/religionedit.html', controller: 'ReligionEditViewModel' });
		
        $routeProvider.otherwise({ redirectTo: schoolERP.rootPath + 'core/religion' });

		$locationProvider.html5Mode({
		  enabled: true,
		  requireBase: false
		});
    });

religionModule.controller("ReligionViewModel", function ($scope, $window, viewModelHelper) {

    $scope.viewModelHelper = viewModelHelper;

    $scope.previous = function () {
        $window.history.back();
    }
});

religionModule.controller("ReligionListViewModel", function ($scope,$window, $location, viewModelHelper) {

    $scope.previous = function () {
        $window.history.back();
    }

	$scope.title = 'Religions';
    $scope.viewMode = 'religionlist'; // religionlist, success
    $scope.modules = [];
   
    $scope.init = false; // used so view doesn't sit on "no available religions" while load takes place

    $scope.loadReligions = function () {
        viewModelHelper.apiGet('api/religion/availablereligions', null,
                function (result) {
                    $scope.religions = result.data;
					if ($scope.init === false)
						initializeView();
                    $scope.init = true;
                });
    }

	var initializeView = function(){

	setTimeout(function () {
                
				var responsiveHelper_datatable_tabletools = undefined;

	var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

	/* TABLETOOLS */
        var otable = $('#religionTable').DataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'l><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "All Modules",
                       "sPdfMessage": "Eglobalicthub ERP PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by Eglobalicthub <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#religionTable'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });

		// custom toolbar
        //$("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

        // Apply the filter
        $("#religionTable thead th input[type=text]").on('keyup change', function () {

            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();

        });

        /* END TABLETOOLS */

            }, 50);
	}

	$scope.createReligion = function(){
	 $scope.viewMode = 'religionedit';
		$location.path(schoolERP.rootPath + 'core/religion/religionedit/0');
	}

	$scope.viewReligion = function(religionId){
	 $scope.viewMode = 'religionedit';
		$location.path(schoolERP.rootPath + 'core/religion/religionedit/' + religionId);
	}

	$scope.deleteReligion = function(religionId){
	    var deleteFlag = $window.confirm('Are you sure you want to delete this item.');

	    if (deleteFlag) {
	        viewModelHelper.apiPost('api/religion/deletereligion', religionId,
          function (result) {
              toastr.success('Item Deleted Successfully.', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
              $location.path(schoolERP.rootPath + 'core/religion/religionlist');
          },
          function (result) {
              toastr.error('Fail to delete item, ' + result.data, { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });             
          }, null);
	    }
	}

	$scope.religionStatus = function(state){
		if (state === true)
		return 'Active';
		return 'Not Active';
	}
  
    $scope.loadReligions();
});

religionModule.controller("ReligionEditViewModel", function ($scope,$window, $location,$routeParams, viewModelHelper,validator) {



    viewModelHelper.modelIsValid = true;
    viewModelHelper.modelErrors = [];

	$scope.title = 'Edit Religion';
    $scope.viewMode = 'religionedit'; // religionlist, success

    $scope.religionModel = {Code:'', Name:'' , Active:true};

	 $scope.religionRoleModels = [];
   
    $scope.init = false; // used so view doesn't sit on "no available religions" while load takes place

	 var religionModelRules = [];

    var setupRules = function () {
	religionModelRules.push(new validator.PropertyRule("Code", {
            required: { message: "Code is required" }
        }));

        religionModelRules.push(new validator.PropertyRule("Name", {
            required: { message: "Name is required" }
        }));
       
    }

	$scope.loadReligion = function(){
	    if ($routeParams.religionId !== "0") {
	        viewModelHelper.apiGet('api/religion/getreligion/' + $routeParams.religionId, null,
						function (result) {
							$scope.religionModel = result.data;
							if ($scope.init === false)
								initializeView();
							$scope.init = true;
						});
			}
	}

	var initializeView = function(){
		setTimeout(function () {
                

            }, 50);
	}
	

	$scope.cancel = function(){
		$location.path(schoolERP.rootPath + 'core/religion/religionlist');
	}

	$scope.save = function(){
		validator.ValidateModel($scope.religionModel, religionModelRules);
        viewModelHelper.modelIsValid = $scope.religionModel.isValid;
        viewModelHelper.modelErrors = $scope.religionModel.errors;
        if (viewModelHelper.modelIsValid) {

			viewModelHelper.apiPost('api/religion/updatereligion', $scope.religionModel,
            function (result) {
                toastr.success('Record Saved', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
                $location.path(schoolERP.rootPath + 'core/religion/religionlist');
            }); 
        }
        else {

            toastr.warning(viewModelHelper.modelErrors, 'Require Fields', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
        }

	    $scope.$parent.viewModelHelper = viewModelHelper;
	}

	setupRules();
	$scope.loadReligion();

});
