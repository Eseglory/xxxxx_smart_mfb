
var changePasswordModule = angular.module('changePassword', ['schoolERPCommon'])
    .config(function ($routeProvider, $locationProvider) {

        $routeProvider.when(schoolERP.rootPath + 'core/changePassword', { templateUrl: schoolERP.rootPath + 'app/core/views/changePasswordedit.html', controller: 'ChangePasswordEditViewModel' });
        $routeProvider.when(schoolERP.rootPath + 'core/changePassword/changePasswordedit/:changePasswordId', { templateUrl: schoolERP.rootPath + 'app/core/views/changePasswordedit.html', controller: 'ChangePasswordEditViewModel' });

        $routeProvider.otherwise({ redirectTo: schoolERP.rootPath + 'core/changePassword' });

        $locationProvider.html5Mode({
            enabled: true,
            requireBase: false
        });
    });

changePasswordModule.controller("ChangePasswordViewModel", function ($scope, $window, viewModelHelper) {

    $scope.viewModelHelper = viewModelHelper;

    $scope.previous = function () {
        $window.history.back();
    }
});

changePasswordModule.controller("ChangePasswordListViewModel", function ($scope, $window, $location, viewModelHelper) {

    $scope.previous = function () {
        $window.history.back();
    }

    $scope.title = 'ChangePasswords';
    $scope.viewMode = 'changePasswordlist'; // changePasswordlist, success
    $scope.modules = [];

    $scope.init = false; // used so view doesn't sit on "no available changePasswords" while load takes place

    $scope.loadChangePasswords = function () {
        viewModelHelper.apiGet('api/changePassword/availablechangePasswords', null,
                function (result) {
                    $scope.changePasswords = result.data;
                    if ($scope.init === false)
                        initializeView();
                    $scope.init = true;
                });
    }

    var initializeView = function () {

        setTimeout(function () {

            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            /* TABLETOOLS */
            var otable = $('#changePasswordTable').DataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'l><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "All Modules",
                           "sPdfMessage": "Eglobalicthub ERP PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by Eglobalicthub <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#changePasswordTable'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            // custom toolbar
            //$("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#changePasswordTable thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });

            /* END TABLETOOLS */

        }, 50);
    }

    $scope.createChangePassword = function () {
        $scope.viewMode = 'changePasswordedit';
        $location.path(schoolERP.rootPath + 'core/changePassword/changePasswordedit/0');
    }

    $scope.viewChangePassword = function (changePasswordId) {
        $scope.viewMode = 'changePasswordedit';
        $location.path(schoolERP.rootPath + 'core/changePassword/changePasswordedit/' + changePasswordId);
    }

    $scope.deleteChangePassword = function (changePasswordId) {
        var deleteFlag = $window.confirm('Are you sure you want to delete this item.');

        if (deleteFlag) {
            viewModelHelper.apiPost('api/changePassword/deletechangePassword', changePasswordId,
          function (result) {
              alert('Item deleted successfully.');
              $location.path(schoolERP.rootPath + 'core/changePassword/changePasswordlist');
          },
          function (result) {
              alert('Fail to delete item. ' + result.data);
          }, null);
        }
    }

    $scope.changePasswordStatus = function (state) {
        if (state === true)
            return 'Active';
        return 'Not Active';
    }

    $scope.updateLockStatus = function (state) {
        if (state === true) {
            $scope.LockStatusClass = 'btn btn-success btn-xs glyphicon glyphicon-eye-open';
            changePassword.IsLock = false;
        }
        else if (state === false)
            $scope.LockStatusClass = 'btn btn-danger btn-xs glyphicon glyphicon-eye-close';
        changePassword.IsLock = true;
    }

    $scope.LockStatusClass = 'btn btn-warning btn-xs glyphicon glyphicon-lock';
    $scope.changePasswordLockStatus = function (state) {
        if (state === true) {
            $scope.LockStatusClass = 'btn btn-success btn-xs glyphicon glyphicon-eye-open';
            return 'UnLock';
        }
        else {
            $scope.LockStatusClass = 'btn btn-danger btn-xs glyphicon glyphicon-eye-close';
            return 'Locked';
        }

    }

    $scope.loadChangePasswords();
});

changePasswordModule.controller("ChangePasswordEditViewModel", function ($scope, $window, $location, $routeParams, viewModelHelper, validator) {



    viewModelHelper.modelIsValid = true;
    viewModelHelper.modelErrors = [];

    $scope.title = 'Edit ChangePassword';
    $scope.viewMode = 'changepasswordedit'; // changePasswordlist, success

    $scope.changePasswordModel = { OldPassword: '', NewPassword: '', VerifyPassword:'' };

    $scope.changePasswordRoleModels = [];

    $scope.init = false; // used so view doesn't sit on "no available changePasswords" while load takes place

    var changePasswordModelRules = [];

    var setupRules = function () {
        changePasswordModelRules.push(new validator.PropertyRule("OldPassword", {
            required: { message: "Old Password is required" }
        }));

        changePasswordModelRules.push(new validator.PropertyRule("NewPassword", {
            required: { message: "New Password is required" }
        }));

        changePasswordModelRules.push(new validator.PropertyRule("VerifyPassword", {
            required: { message: "You need to Verify Password" }
        }));
    }

    //$scope.loadChangePassword = function () {
    //    if ($routeParams.changePasswordId !== "0") {
    //        viewModelHelper.apiGet('api/changePassword/getchangePassword/' + $routeParams.changePasswordId, null,
	//					function (result) {
	//					    $scope.changePasswordModel = result.data;
	//					    if ($scope.init === false)
	//					        initializeView();
	//					    $scope.init = true;
	//					});
    //    }
    //}

    var initializeView = function () {
        setTimeout(function () {


        }, 50);
    }


    $scope.cancel = function () {
        $location.path(schoolERP.rootPath + 'core/changePassword/changePasswordlist');
    }

    $scope.save = function () {
        validator.ValidateModel($scope.changePasswordModel, changePasswordModelRules);
        viewModelHelper.modelIsValid = $scope.changePasswordModel.isValid;
        viewModelHelper.modelErrors = $scope.changePasswordModel.errors;
        if (viewModelHelper.modelIsValid) {

            viewModelHelper.apiPost('api/user/changePassword', $scope.changePasswordModel,
            function (result) {
                toastr.success('Password Change Successfully.','Success', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
                
                $location.path(schoolERP.rootPath + 'core/changePassword/changePasswordedit');
            });
        }
        else
            viewModelHelper.modelErrors = $scope.changePasswordModel.errors;
            
        toastr.error(viewModelHelper.modelErrors, 'Require Fields', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
    }

    setupRules();
    //$scope.loadChangePassword();

});
