
var themeModule = angular.module('theme', ['schoolERPCommon'])
    .config(function ($routeProvider, $locationProvider) {

        $routeProvider.when(schoolERP.rootPath + 'core/theme', { templateUrl: schoolERP.rootPath + 'app/core/views/themelist.html', controller: 'ThemeListViewModel' });
        $routeProvider.when(schoolERP.rootPath + 'core/theme/themeedit/:themeId', { templateUrl: schoolERP.rootPath + 'app/core/views/themeedit.html', controller: 'ThemeEditViewModel' });

        $routeProvider.otherwise({ redirectTo: schoolERP.rootPath + 'core/theme' });

        $locationProvider.html5Mode({
            enabled: true,
            requireBase: false
        });
    });

themeModule.controller("ThemeViewModel", function ($scope, $window, viewModelHelper) {

    $scope.viewModelHelper = viewModelHelper;

    $scope.previous = function () {
        $window.history.back();
    }
});

themeModule.controller("ThemeListViewModel", function ($scope, $window, $location, viewModelHelper) {

    $scope.previous = function () {
        $window.history.back();
    }

    $scope.title = 'Themes';
    $scope.viewMode = 'themelist'; // themelist, success
    $scope.modules = [];

    $scope.init = false; // used so view doesn't sit on "no available themes" while load takes place

    $scope.loadThemes = function () {
        viewModelHelper.apiGet('api/theme/availablethemes', null,
                function (result) {
                    $scope.themes = result.data;
                    if ($scope.init === false)
                        initializeView();
                    $scope.init = true;
                    
                });
    }

    var initializeView = function () {

        setTimeout(function () {

            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            /* TABLETOOLS */
            var otable = $('#themeTable').DataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'l><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                        "t" +
                        "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "All Modules",
                           "sPdfMessage": "Eglobalicthub ERP PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by Eglobalicthub <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#themeTable'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            // custom toolbar
            //$("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#themeTable thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });

            /* END TABLETOOLS */

        }, 50);
    }

    $scope.createTheme = function () {
        $scope.viewMode = 'themeedit';
        $location.path(schoolERP.rootPath + 'core/theme/themeedit/0');
    }

    $scope.viewTheme = function (themeId) {
        $scope.viewMode = 'themeedit';
        $location.path(schoolERP.rootPath + 'core/theme/themeedit/' + themeId);
    }

    $scope.deleteTheme = function (themeId) {
        var deleteFlag = $window.confirm('Are you sure you want to delete this item.');

        if (deleteFlag) {
            viewModelHelper.apiPost('api/theme/deletetheme', themeId,
          function (result) {
              toastr.success('Theme Deleted Successfully.', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
              //alert('Item deleted successfully.');
              $location.path(schoolERP.rootPath + 'core/theme/themelist');
          },
          function (result) {
              toastr.error('Fail to delete item', +result.data, { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
              //alert('Fail to delete item. ' + result.data);
          }, null);
        }
    }

    $scope.themeStatus = function (state) {
        if (state === true)
            return 'Active';
        return 'Not Active';
    }

    $scope.themeChangedStatus = function (state) {
        if (state === "smart-style-1"){
            return 'Smart Default';
        }
        else if(state ==="smart-style-2"){
            return 'Dark Elegance';
        }
        else if(state ==="smart-style-3"){
            return 'Ultra Light';
        }
        else if(state ==="smart-style-4"){
            return 'Google Skin';
        }
        else if(state ==="smart-style-5"){
            return 'Pixel Glass';
        }
        else if(state ==="smart-style-6"){
            return 'Glass';
        }
        else if(state ==="smart-style-7"){
            return 'Material Design';
        }

        $scope.updateLockStatus = function (state) {
            if (state === true) {
                $scope.LockStatusClass = 'btn btn-success btn-xs glyphicon glyphicon-eye-open';
                theme.IsLock = false;
            }
            else if (state === false)
                $scope.LockStatusClass = 'btn btn-danger btn-xs glyphicon glyphicon-eye-close';
            theme.IsLock = true;
        }

    }

    $scope.loadThemes();
});

themeModule.controller("ThemeEditViewModel", function ($scope, $window, $location, $routeParams, viewModelHelper, validator) {



    viewModelHelper.modelIsValid = true;
    viewModelHelper.modelErrors = [];

    $scope.title = 'Edit Theme';
    $scope.viewMode = 'themeedit'; // themelist, success

    $scope.themeModel = { Code: '', Active: true };

    $scope.themeRoleModels = [];

    $scope.init = false; // used so view doesn't sit on "no available themes" while load takes place

    var themeModelRules = [];

    var setupRules = function () {

        themeModelRules.push(new validator.PropertyRule("Code", {
            required: { message: "Code is required" }
        }));

    }

    $scope.loadTheme = function () {
        loadLookUp();
        if ($routeParams.themeId !== "0") {
            viewModelHelper.apiGet('api/theme/gettheme/' + $routeParams.themeId, null,
						function (result) {
						    $scope.themeModel = result.data;
						    if ($scope.init === false)
						        initializeView();
						    $scope.init = true;
						});
        }
    }

    var initializeView = function () {
        setTimeout(function () {


        }, 50);
    }


    $scope.cancel = function () {
        $location.path(schoolERP.rootPath + 'core/theme/themelist');
    }

    $scope.save = function () {
        validator.ValidateModel($scope.themeModel, themeModelRules);
        viewModelHelper.modelIsValid = $scope.themeModel.isValid;
        viewModelHelper.modelErrors = $scope.themeModel.errors;
        if (viewModelHelper.modelIsValid) {

            viewModelHelper.apiPost('api/theme/updatetheme', $scope.themeModel,
            function (result) {
                $location.path(schoolERP.rootPath + 'core/theme/themelist');
                $window.location.reload();
            });
        }
        else {
            viewModelHelper.modelErrors = $scope.themeModel.errors;
            toastr.error(viewModelHelper.modelErrors, 'Require Fields', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
        }

        $scope.$parent.viewModelHelper = viewModelHelper;
    }
    var loadLookUp = function () {
        if ($scope.init !== true) {
            loadCategorys();
        }
    }
    var loadCategorys = function () {
        $scope.categorys = [];
        $scope.categorys.push({ Code: 'smart-style-1', Name: 'Smart Default' });
        $scope.categorys.push({ Code: 'smart-style-2', Name: 'Dark Elegance' });
        $scope.categorys.push({ Code: 'smart-style-3', Name: 'Ultra Light' });
        $scope.categorys.push({ Code: 'smart-style-4', Name: 'Google Skin' });
        $scope.categorys.push({ Code: 'smart-style-5', Name: 'Pixel Glass' });
        $scope.categorys.push({ Code: 'smart-style-6', Name: 'Glass' });
        $scope.categorys.push({ Code: 'smart-style-7', Name: 'Material Design' });
    }

    setupRules();
    $scope.loadTheme();

});
