
var countryModule = angular.module('country', ['schoolERPCommon'])
    .config(function ($routeProvider, $locationProvider) {
   
        $routeProvider.when(schoolERP.rootPath + 'core/country', { templateUrl: schoolERP.rootPath + 'app/core/views/countrylist.html', controller: 'CountryListViewModel' });
		$routeProvider.when(schoolERP.rootPath + 'core/country/countryedit/:countryId', { templateUrl: schoolERP.rootPath + 'app/core/views/countryedit.html', controller: 'CountryEditViewModel' });
		$routeProvider.when(schoolERP.rootPath + 'core/country/stateedit/:countryId/:companyCode/:stateId', { templateUrl: schoolERP.rootPath + 'app/core/views/stateedit.html', controller: 'StateEditViewModel' });
		$routeProvider.when(schoolERP.rootPath + 'core/country/cityedit/:countryId/:stateId/:cityId', { templateUrl: schoolERP.rootPath + 'app/core/views/cityedit.html', controller: 'CityEditViewModel' });
        
        $routeProvider.otherwise({ redirectTo: schoolERP.rootPath + 'core/country' });

		$locationProvider.html5Mode({
		  enabled: true,
		  requireBase: false
		});
    });

countryModule.controller("CountryViewModel", function ($scope, $window, viewModelHelper) {

    $scope.viewModelHelper = viewModelHelper;

    $scope.previous = function () {
        $window.history.back();
    }
});

countryModule.controller("CountryListViewModel", function ($scope,$window, $location, viewModelHelper) {

    $scope.previous = function () {
        $window.history.back();
    }

	$scope.title = 'Countries';
    $scope.viewMode = 'countrylist'; // countrylist, success
    $scope.countries = [];
   
    $scope.init = false; // used so view doesn't sit on "no available countrys" while load takes place

    $scope.loadCountries = function () {
        viewModelHelper.apiGet('api/country/availablecountries', null,
                function (result) {
                    $scope.countries = result.data;
					if ($scope.init === false)
						initializeView();
                    $scope.init = true;
                });
    }

	var initializeView = function(){

	setTimeout(function () {
                
				var responsiveHelper_datatable_tabletools = undefined;

	var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

    	/* TABLETOOLS */
        var otable = $('#countryTable').DataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'l><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "All Modules",
                       "sPdfMessage": "Eglobalicthub ERP PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by Eglobalicthub <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#countryTable'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });

		// custom toolbar
        //$("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

        // Apply the filter
        $("#countryTable thead th input[type=text]").on('keyup change', function () {

            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();

        });

        /* END TABLETOOLS */

            }, 50);
	}

	$scope.createCountry = function(){
	 $scope.viewMode = 'countryedit';
		$location.path(schoolERP.rootPath + 'core/country/countryedit/0');
	}

	$scope.viewCountry = function(countryId){
	 $scope.viewMode = 'countryedit';
		$location.path(schoolERP.rootPath + 'core/country/countryedit/' + countryId);
	}

	$scope.deleteCountry = function(countryId){
	    var deleteFlag = $window.confirm('Are you sure you want to delete this item.');

	    if (deleteFlag) {
	        viewModelHelper.apiPost('api/country/deletecountry', countryId,
          function (result) {
              toastr.success('Item Deleted Successfully.', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
              $location.path(schoolERP.rootPath + 'core/country/countrylist');
          },
          function (result) {
              toastr.error('Fail to delete item, ' + result.data, { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });             
          }, null);
	    }
	}

	$scope.countryStatus = function(state){
		if (state === true)
		return 'Active';
		return 'Not Active';
	}
  
    $scope.loadCountries();
});

countryModule.controller("CountryEditViewModel", function ($scope,$window, $location,$routeParams, viewModelHelper,validator) {



    viewModelHelper.modelIsValid = true;
    viewModelHelper.modelErrors = [];

	$scope.title = 'Edit Country';
    $scope.viewMode = 'countryedit'; // countrylist, success
    $scope.countryModel = {Code:'',Name:'',Active:true};
	$scope.stateModels = [];
   
    $scope.init = false; // used so view doesn't sit on "no available countrys" while load takes place

	 var countryModelRules = [];

    var setupRules = function () {
	countryModelRules.push(new validator.PropertyRule("Code", {
            required: { message: "Code is required" }
        }));

        countryModelRules.push(new validator.PropertyRule("Name", {
            required: { message: "Name is required" }
        }));
       
    }

	$scope.loadCountry = function(){
	    if ($routeParams.countryId !== "0") {
	        viewModelHelper.apiGet('api/country/getcountry/' + $routeParams.countryId, null,
						function (result) {
							$scope.countryModel = result.data.Country;
							$scope.stateModels = result.data.States;
							if ($scope.init === false)
								initializeView();
							$scope.init = true;
						});
			}
	}

	var initializeView = function(){
		setTimeout(function () {
                
				var responsiveHelper_datatable_tabletools = undefined;

	var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

	/* TABLETOOLS */
        var otable = $('#stateTable').DataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'l><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "All Modules",
                       "sPdfMessage": "Eglobalicthub ERP PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by Eglobalicthub <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#stateTable'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });

		// custom toolbar
        //$("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

        // Apply the filter
        $("#stateTable thead th input[type=text]").on('keyup change', function () {

            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();

        });

        /* END TABLETOOLS */

            }, 50);
	}
	

	$scope.cancel = function(){
		$location.path(schoolERP.rootPath + 'core/country/countrylist');
	}

	$scope.save = function(){
		validator.ValidateModel($scope.countryModel, countryModelRules);
        viewModelHelper.modelIsValid = $scope.countryModel.isValid;
        viewModelHelper.modelErrors = $scope.countryModel.errors;
        if (viewModelHelper.modelIsValid) {

			viewModelHelper.apiPost('api/country/updatecountry', $scope.countryModel,
            function (result) {
                toastr.success('Record Saved', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
                $location.path(schoolERP.rootPath + 'core/country/countrylist');
            }); 
        }
        else {
            
            toastr.warning(viewModelHelper.modelErrors, 'Require Fields', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
        }

	    $scope.$parent.viewModelHelper = viewModelHelper;
	}

	$scope.createState = function(){
	 $scope.viewMode = 'stateedit';
	 $location.path(schoolERP.rootPath + 'core/country/stateedit/' + $routeParams.countryId + '/'+  $scope.countryModel.Code + '/0');
	}

	$scope.viewState = function(stateId){
	 $scope.viewMode = 'stateedit';
	 $location.path(schoolERP.rootPath + 'core/country/stateedit/' + $routeParams.countryId + '/' + $scope.countryModel.Code +  '/' + stateId);
	}

	$scope.deleteState = function(stateId){
	    var deleteFlag = $window.confirm('Are you sure you want to delete this item.');

	    if (deleteFlag) {
	        viewModelHelper.apiPost('api/country/deletestate', stateId,
          function (result) {
              toastr.success('Item Deleted Successfully.', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
              $location.path(schoolERP.rootPath + 'core/country/countryedit/' + $routeParams.countryId);
          },
          function (result) {
              toastr.error('Fail to delete item, ' + result.data, { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
          }, null);
	    }
	}

	$scope.stateStatus = function(state){
		if (state === true)
		return 'Active';
		return 'Not Active';
	}

	setupRules();
	$scope.loadCountry();

});

countryModule.controller("StateEditViewModel", function ($scope,$window, $location,$routeParams, viewModelHelper,validator) {



    viewModelHelper.modelIsValid = true;
    viewModelHelper.modelErrors = [];

	$scope.title = 'Edit State';
	$scope.viewMode = 'stateedit'; // statelist, success
    $scope.stateModel = {Code:'',Name:'',CountryCode:'NG',Active:true};
	$scope.cityModels = [];
   
    $scope.init = false; // used so view doesn't sit on "no available states" while load takes place

	 var stateModelRules = [];

    var setupRules = function () {
	stateModelRules.push(new validator.PropertyRule("Code", {
            required: { message: "Code is required" }
        }));

        stateModelRules.push(new validator.PropertyRule("Name", {
            required: { message: "Name is required" }
        }));
       
	    stateModelRules.push(new validator.PropertyRule("CountryCode", {
            notZero: { message: "Country is required" }
        }));
    }

	$scope.loadState = function(){
	    if ($routeParams.stateId !== "0") {
	        viewModelHelper.apiGet('api/country/getstate/' + $routeParams.stateId, null,
						function (result) {
							$scope.stateModel = result.data.State;
							$scope.cityModels = result.data.Cities;
							if ($scope.init === false)
								initializeView();
							$scope.init = true;
						});
			}
	}

	var initializeView = function(){
		setTimeout(function () {
                
				var responsiveHelper_datatable_tabletools = undefined;

	var breakpointDefinition = {
            tablet: 1024,
            phone: 480
        };

	/* TABLETOOLS */
        var otable = $('#cityTable').DataTable({

            // Tabletools options:
            //   https://datatables.net/extensions/tabletools/button_options
            "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'l><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
            "oTableTools": {
                "aButtons": [
                "copy",
                "csv",
                "xls",
                   {
                       "sExtends": "pdf",
                       "sTitle": "Cities",
                       "sPdfMessage": "Eglobalicthub ERP PDF Export",
                       "sPdfSize": "letter"
                   },
                   {
                       "sExtends": "print",
                       "sMessage": "Generated by Eglobalicthub <i>(press Esc to close)</i>"
                   }
                ],
                "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
            },
            "autoWidth": true,
            "preDrawCallback": function () {
                // Initialize the responsive datatables helper once.
                if (!responsiveHelper_datatable_tabletools) {
                    responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#cityTable'), breakpointDefinition);
                }
            },
            "rowCallback": function (nRow) {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            },
            "drawCallback": function (oSettings) {
                responsiveHelper_datatable_tabletools.respond();
            }
        });

		// custom toolbar
       
        // Apply the filter
        $("#stateTable thead th input[type=text]").on('keyup change', function () {

            otable
                .column($(this).parent().index() + ':visible')
                .search(this.value)
                .draw();

        });

        /* END TABLETOOLS */

            }, 50);
	}
	

	$scope.cancel = function(){
		$location.path(schoolERP.rootPath + 'core/country/countryedit/' + $routeParams.countryId);
	}

	$scope.save = function(){
		validator.ValidateModel($scope.stateModel, stateModelRules);
        viewModelHelper.modelIsValid = $scope.stateModel.isValid;
        viewModelHelper.modelErrors = $scope.stateModel.errors;
        if (viewModelHelper.modelIsValid) {

			viewModelHelper.apiPost('api/country/updatestate', $scope.stateModel,
            function (result) {
                toastr.success('Record Saved', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
                $location.path(schoolERP.rootPath + 'core/country/countryedit/' + $routeParams.countryId);
            }); 
        }
        else {

            toastr.warning(viewModelHelper.modelErrors, 'Require Fields', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
        }

	    $scope.$parent.viewModelHelper = viewModelHelper;
	}

	$scope.createCity = function(){
	 $scope.viewMode = 'cityedit';
	 $location.path(schoolERP.rootPath + 'core/country/cityedit/' + $routeParams.countryId + '/' + $routeParams.stateId +'/0');
	}

	$scope.viewCity = function(cityId){
	 $scope.viewMode = 'stateedit';
	 $location.path(schoolERP.rootPath + 'core/country/cityedit/' + $routeParams.countryId + '/' + $routeParams.stateId + '/' + cityId);
	}

	$scope.deleteCity = function(cityId){
	    var deleteFlag = $window.confirm('Are you sure you want to delete this item.');

	    if (deleteFlag) {
	        viewModelHelper.apiPost('api/country/deletecity', cityId,
          function (result) {
              toastr.success('Item Deleted Successfully.', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
          },
          function (result) {
              toastr.error('Fail to delete item, ' +result.data, { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
          }, null);
	    }
	}

	$scope.cityStatus = function(city){
		if (city === true)
		return 'Active';
		return 'Not Active';
	}

	setupRules();
	$scope.loadState();

});

countryModule.controller("CityEditViewModel", function ($scope,$window, $location,$routeParams, viewModelHelper,validator) {

  

    viewModelHelper.modelIsValid = true;
    viewModelHelper.modelErrors = [];

	$scope.title = 'Edit City';
    $scope.viewMode = 'cityedit'; // countryedit, success
    $scope.cityModel = { CityId: 0, Code: '', Name: '', StateId: $routeParams.stateId, Active: true };
   
    $scope.init = false; // used so view doesn't sit on "no available countrys" while load takes place

	 var cityModelRules = [];

    var setupRules = function () {
        cityModelRules.push(new validator.PropertyRule("StateId", {
            notZero: { message: "State is required" }
        }));

		 cityModelRules.push(new validator.PropertyRule("Code", {
		     required: { message: "Code is required" }
        }));

		cityModelRules.push(new validator.PropertyRule("Name", {
		     required: { message: "Name is required" }
        }));
       
    }

	var initializeView = function(){

	//Lookups

	if ($routeParams.cityId !== "0") {
	    viewModelHelper.apiGet('api/country/getcity/' + $routeParams.cityId, null,
					function (result) {
						$scope.cityModel = result.data;
					
						$scope.init = true;
					});
		}
	}
	

	$scope.cancel = function () {
	    $location.path(schoolERP.rootPath + 'core/country/stateedit/' + $routeParams.countryId + '/' + $routeParams.stateId);
	}

	$scope.save = function () {

	    $scope.cityModel.StateId = $routeParams.stateId;

		validator.ValidateModel($scope.cityModel, cityModelRules);
        viewModelHelper.modelIsValid = $scope.cityModel.isValid;
        viewModelHelper.modelErrors = $scope.cityModel.errors;
        if (viewModelHelper.modelIsValid) {

			viewModelHelper.apiPost('api/country/updatecity', $scope.cityModel,
            function (result) {
                toastr.success('Record Saved', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
                $location.path(schoolERP.rootPath + 'core/country/stateedit/' + $routeParams.countryId + '/' + $routeParams.stateId);
            });
        }
        else {

            toastr.warning(viewModelHelper.modelErrors, 'Require Fields', { closeButton: true, positionClass: 'toast-top-center', preventOPenDuplicates: true });
        }

	    $scope.$parent.viewModelHelper = viewModelHelper;
	}

	setupRules();
	initializeView();

});


